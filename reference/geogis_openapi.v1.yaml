openapi: 3.0.0
info:
  title: geogis_openapi
  version: '1.0'
  description: API for GeoGIS field data
  contact:
    name: Danske Regioner
    url: 'http://www.danskeregioner.dk'
    email: tomhan@rm.dk
servers:
  - url: 'http://localhost:3000'
    description: testsite
  - description: Region Midt GeoGIS
    url: 'https://geogisapi.rm.dk'
paths:
  '/project/{projectId}':
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
        description: GUID of project
    get:
      summary: 'Project GET {projectId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project_Detailed'
              examples:
                example-1:
                  value:
                    projectId: string
                    ProjectData:
                      projectId: string
                      projectNo: string
                      projectTitle: string
                      x: string
                      'y': string
                      geometry: string
                      lat: string
                      long: string
                      jarNo: string
                      Address: string
                      contactRegion: string
                      InvoicePersonReference: string
                      primaryLaboratoryId: string
                      noteToSampler: string
                      caseNumber: string
                      projectManager: string
                    ProjectPhases:
                      - phaseId: string
                        name: string
                        type: string
                        start: string
                        end: string
                        label: string
                        companyId: string
                        companyT: string
                        projectId: string
                    SampleSites:
                      - sampleSiteId: string
                        sampleSiteLabel: string
                        sampleSiteType: string
                        point:
                          pointId: string
                          pointNo: string
                          description: string
                          startDate: '2019-08-24T14:15:22Z'
                          endDate: '2019-08-24T14:15:22Z'
                          projectId: string
                          pointTypeC: string
                          pointTypeT: string
                          phaseId: string
                          phaseT: string
                          x: 0
                          'y': 0
                          z: 0
                          dataowner: string
                          StatusC: string
                          StatusT: string
                          pointTypeGroup: string
                          pointTypeJupiterGroupC: string
                          coordinateQualityC: string
                          coordinateQualityT: string
                          Well:
                            DGU: string
                            purposeC: string
                            purposeT: string
                            useC: string
                            useT: string
                            WellTopTypeC: string
                            WellTopTypeT: string
                            isAbandoned: true
                            contractorId: string
                            contractorT: string
                            geoCompany: string
                            abandonDate: string
                            hasIntakes: true
                        intake:
                          intakeId: string
                          intakeNo: 0
                          Name: string
                          Description: string
                          screenNo: 0
                          top: 0
                          bottom: 0
                          depth1: 0
                          depth2: 0
                          pointId: string
                          diameter_mm: 0
                        project:
                          projectId: string
                          projectNo: string
                          projectTitle: string
                          x: string
                          'y': string
                          geometry: string
                          lat: string
                          long: string
                          jarNo: string
                          Address: string
                          contactRegion: string
                          InvoicePersonReference: string
                          primaryLaboratoryId: string
                          noteToSampler: string
                          caseNumber: string
                          projectManager: string
                        LastWaterlevel:
                          date: string
                          waterlevel: string
                          depth: string
                          referencelevel: string
                          situationC: string
                          situationT: string
                          extremeC: string
                          extremeT: string
                        LastSample:
                          date: string
                          sampledBy: string
                          MatrixC: string
                          MatrixT: string
                          sampleId: string
        '404':
          description: Not Found
          content:
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                description: ''
                type: object
                properties:
                  location:
                    type: object
                    required:
                      - locationId
                    properties:
                      locationId:
                        type: string
                        minLength: 1
                      locationName:
                        type: string
                        minLength: 1
                      address:
                        type: string
                        minLength: 1
                      x: {}
                      'y': {}
                required:
                  - location
              examples: {}
      operationId: get-project
      description: Returns the information of a project by its projectId
      parameters: []
      tags:
        - Endpoints
  '/samplesite/{samplesiteId}':
    get:
      summary: 'Samplesite GET {samplesiteId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleSite'
          headers: {}
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: get-samplesite-samplesiteid
      description: Get details of samplesite (geogis point and or intake)
      parameters: []
      tags:
        - Endpoints
    parameters:
      - schema:
          type: string
        name: samplesiteId
        in: path
        description: GUID of samplesite (geogis pointid or intakeid)
        required: true
  /samplesite:
    get:
      summary: Samplesite GET
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  SampleSites:
                    type: array
                    items:
                      $ref: '#/components/schemas/SampleSite'
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-samplesite
      description: |-
        get all samplesites that match query parameters. 
        Parameters lat,long and distance are used to get records within distance from the position.
      parameters:
        - schema:
            type: string
          in: query
          name: projectid
          description: GUID of projectid
        - schema:
            type: array
          in: query
          name: DGU
          description: DGU number of borehole
        - schema:
            type: string
          in: query
          name: startDate
          description: startdate must be less than
        - schema:
            type: string
          in: query
          name: endDate
          description: enddate must be later than
        - schema:
            type: array
          in: query
          name: pointTypeC
          description: the type of the samplesite
        - $ref: '#/components/parameters/lat'
        - $ref: '#/components/parameters/long'
        - $ref: '#/components/parameters/distance'
        - schema:
            type: boolean
          in: query
          name: isWell
          description: return only wells
        - schema:
            type: boolean
          in: query
          name: isNotWell
          description: do not return wells
        - schema:
            type: boolean
          in: query
          name: hasIntakes
          description: must have intakes
        - schema:
            type: string
          in: query
          name: projectNo
          description: projectno to search
        - schema:
            type: string
          in: query
          name: caseNumber
          description: projects case number
        - schema:
            type: string
          in: query
          name: phaseId
          description: phaseId matching the samplesites
        - schema:
            type: boolean
          in: query
          name: isNotAbandoned
          description: only return data not marked as abandoned
        - schema:
            type: string
          in: query
          name: pointTypeJupiterGroupC
          description: '1=boringer, 2=jord,3=poreluft,4=indeklima,5=tilsyn,7=recipient,9=andet'
      tags:
        - Endpoints
    put:
      summary: Samplesite PUT (deprecated)
      operationId: put-samplesite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleSite'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: create new samplesite. Returns the created samplesite object if OK
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                SamplesiteId:
                  type: string
                projectId:
                  type: string
                IsIntake:
                  type: boolean
                Intake:
                  type: object
                  properties:
                    pointId:
                      type: string
                      description: |
                        GUID of samplesite for well
                    intakeno:
                      type: number
                    intake:
                      type: string
                    depth:
                      type: string
                    diameter_mm:
                      type: string
                Well:
                  type: object
                  properties:
                    DGU:
                      type: string
                    depth:
                      type: string
                sampleSiteNo:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
                samplesiteTypeC:
                  type: string
                  description: . Irrelevant
                phaseId:
                  type: string
              required:
                - SamplesiteId
                - projectId
                - IsIntake
            examples: {}
        description: ''
      deprecated: true
      x-internal: true
      tags:
        - Endpoints
  /project:
    get:
      summary: Project GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  Projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
              examples: {}
        '400':
          description: Bad Request
      operationId: get-project-find
      parameters:
        - $ref: '#/components/parameters/projectNo'
        - $ref: '#/components/parameters/distance'
        - schema:
            type: array
          in: query
          name: geometry
          description: WKT geometry of search area
        - schema:
            type: string
          in: query
          name: projectTypeC
          description: projecttype code
        - schema:
            type: string
          in: query
          name: caseNumber
          description: the project case number
        - schema:
            type: number
          in: query
          name: x
          description: x utm32euref89
        - schema:
            type: number
          in: query
          name: 'y'
          description: y x utm32euref89
      description: Returns projects matching query parameters.
      tags:
        - Endpoints
    parameters: []
  '/sample/{sampleId}':
    get:
      summary: 'Sample GET {sampleId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
        '400':
          description: Bad Request
      operationId: get-sample-sampleId
      description: get data for specific sample.
      tags:
        - Endpoints
    parameters:
      - schema:
          type: string
        name: sampleId
        in: path
        required: true
    patch:
      summary: 'Sample PATCH {sampleId}'
      operationId: patch-sample-sampleid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
        '400':
          description: Bad Request
      description: update data for specified sample
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                Sample:
                  type: object
                  properties:
                    sampleId:
                      type: string
                      minLength: 36
                      maxLength: 36
                    sampleSiteId:
                      type: string
                      minLength: 36
                      maxLength: 36
                    sampleLabel:
                      type: string
                    matrixC:
                      type: string
                    sampledBy:
                      type: string
                    sampleBarcode:
                      type: string
                    start:
                      type: string
                      format: date-time
                    end:
                      type: string
                      format: date-time
                      description: sampling f
                    laboratoryId:
                      type: string
                    laboratoryName:
                      type: string
                    equipmentC:
                      type: string
                    sampleTop_m:
                      type: number
                    sampleBottom_m:
                      type: number
                    fieldRemark:
                      type: string
                    remark:
                      type: string
                    fieldMeasurements:
                      type: array
                      items:
                        $ref: '#/components/schemas/fieldmeasurement_input'
                  required:
                    - sampleId
                    - sampleSiteId
            examples: {}
      tags:
        - Endpoints
    delete:
      summary: 'Sample DELETE {sampleId}'
      operationId: delete-sample-sampleId
      responses:
        '200':
          description: OK
      tags:
        - Endpoints
      description: 'Delete specified sample. Validation will restrict '
  /sample:
    get:
      summary: Sample GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  Samples:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sample'
          headers: {}
        '400':
          description: Bad Request
      operationId: get-sample
      parameters:
        - schema:
            type: string
          in: query
          name: matrixC
          description: returns samples for the specified matrix
        - schema:
            type: string
          in: query
          name: laboratoryId
          description: returns samples for specified laboratory
        - schema:
            type: string
          in: query
          name: StartDate
          description: returns samples sampled after date
        - schema:
            type: string
          in: query
          name: endDate
          description: returns samples sampled before date
        - schema:
            type: string
          in: query
          name: projectId
        - schema:
            type: string
          in: query
          name: sampleSiteId
      description: get all samples matching parameters
      tags:
        - Endpoints
    put:
      summary: Sample PUT
      operationId: put-sample
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
              examples: {}
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                sampleId:
                  type: string
                sampleSiteId:
                  type: string
                  minLength: 1
                  description: Id of the sampleSite (pointid or intakeid)
                sampleLabel:
                  type: string
                matrixC:
                  type: string
                sampledBy:
                  type: string
                sampleBarcode:
                  type: string
                start:
                  type: string
                end:
                  type: string
                laboratoryId:
                  type: string
                equipmentC:
                  type: string
                sampleTop_m:
                  type: number
                sampleBottom_m:
                  type: number
                FieldRemark:
                  type: string
                remark:
                  type: string
                FieldMeasurements:
                  $ref: '#/components/schemas/fieldmeasurement_input'
              required:
                - sampleSiteId
            examples: {}
        description: data for the new sample
      description: create new sample
      tags:
        - Endpoints
  '/codeList/{listId}':
    get:
      summary: 'codeList GET {listId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  listinfo:
                    type: object
                    properties:
                      listDescription:
                        type: string
                      listId:
                        type: string
                      stancodeListNo:
                        type: string
                      listValues:
                        type: array
                        items:
                          type: object
                          properties:
                            valueId:
                              type: string
                            value:
                              type: string
                            valueLong:
                              type: string
                            active:
                              type: boolean
                            startDate:
                              type: string
                              format: date-time
                              example: '2018-03-20T09:12:28Z'
                            endDate:
                              type: string
                              format: date-time
                            stancodeNo:
                              type: string
                            remark:
                              type: string
                            sortOrder:
                              type: integer
                            type:
                              type: string
                            prefix:
                              type: string
                            jupiterId:
                              type: string
              examples:
                example-1:
                  value:
                    listinfo:
                      listName: sampleEquipment
                      listID: '1'
                      stancodeListNo: '1'
                      listValues:
                        - valueId: '1'
                          value: kulrør
                          valueLong: kulrør til luftprøver
                          active: true
                          startDate: '2012-04-23T18:25:43.511Z'
                          endDate: '2019-08-24T14:15:22Z'
                          stancodeNo: '123'
                          remark: ''
                        - valueId: '2'
                          value: orsarør
                          valueLong: orsarør til luftprøver
                          active: true
                          startDate: '2019-08-24T14:15:22Z'
                          endDate: '2019-08-24T14:15:22Z'
                          stancodeNo: '125'
                          remark: ''
                example-2:
                  value:
                    listinfo:
                      listDescription: string
                      listID: string
                      stancodeListNo: string
                      listValues:
                        - valueId: string
                          value: string
                          valueLong: string
                          active: true
                          startDate: '2018-03-20T09:12:28Z'
                          endDate: '2019-08-24T14:15:22Z'
                          stancodeNo: string
                          remark: string
                          sortOrder: 0
                          type: string
                          prefix: string
                          jupiterId: string
      operationId: get-codeList
      description: get codevalues used in endpoints. Only for simple list-tables
      parameters:
        - schema:
            type: boolean
            default: true
          in: query
          name: ShowNonActive
          description: show non-active items?
        - schema:
            type: string
            default: DK
          in: query
          name: Setup
          description: show rows with specified setup (language). Default is DK
      tags:
        - Endpoints
    parameters:
      - schema:
          type: string
        name: listId
        in: path
        required: true
        description: the ID of the list to return. "all" returns all lists
  /point:
    put:
      summary: Point PUT
      operationId: put-point
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sampleSite:
                    $ref: '#/components/schemas/SampleSite'
                  point:
                    $ref: '#/components/schemas/Point'
      description: Create new point (well or other). Response is samplesite object with the created point as a samplesite (Pointid becomes the samplesiteId). Response is also returned as point-object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                pointid:
                  type: string
                pointNo:
                  type: string
                DGU:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
                phaseId:
                  type: string
                pointTypeC:
                  type: string
                x:
                  type: string
                'y':
                  type: string
                z:
                  type: string
                descriptionLocation:
                  type: string
                  description: a description of the location of the point
                pointStatusC:
                  type: string
                description:
                  type: string
              required:
                - projectId
                - pointNo
                - pointTypeC
            examples: {}
      tags:
        - Endpoints
    get:
      summary: Point GET
      operationId: get-point
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  Points:
                    type: array
                    items:
                      type: object
                      properties:
                        pointData:
                          $ref: '#/components/schemas/Point'
                        projectData:
                          $ref: '#/components/schemas/Project'
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
      description: returns points matching query parameters. Minimum one criteria must be provided
      parameters:
        - schema:
            type: string
          in: query
          name: projectId
        - schema:
            type: string
          in: query
          name: projectNo
        - schema:
            type: number
          in: query
          name: x
          description: coordinate x
        - schema:
            type: number
          in: query
          name: 'y'
          description: coordinate  y
        - schema:
            type: integer
          in: query
          name: distance
          description: 'distance from x,y to return data for'
        - schema:
            type: string
          in: query
          name: pointTypeJupiterGroupC
          description: '1=boringer, 2=jord,3=poreluft,4=indeklima,5=tilsyn,7=recipient,9=andet'
        - schema:
            type: boolean
          in: query
          name: isNotAbandoned
        - schema:
            type: boolean
          in: query
          name: isWell
        - schema:
            type: string
          in: query
          name: pointStatusC
        - schema:
            type: boolean
          in: query
          name: hasIntake
      tags:
        - Endpoints
  /intake:
    put:
      summary: Intake PUT
      operationId: put-intake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  intake:
                    $ref: '#/components/schemas/Intake'
              examples: {}
      description: create new intake on a well (pointId). Returns data as samplesite-object (intakeid becomes samplesiteId) and also as intake-object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pointId:
                  type: string
                intakeId:
                  type: string
                intakeNo:
                  type: integer
                intakeName:
                  type: string
                diameter_mm:
                  type: integer
                description:
                  type: string
                screenNo:
                  type: integer
              required:
                - pointId
        description: ''
      tags:
        - Endpoints
    parameters: []
    get:
      summary: Intake GET
      operationId: get-intake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  Intakes:
                    type: array
                    items:
                      type: object
                      properties:
                        IntakeData:
                          $ref: '#/components/schemas/Intake'
                        PointData:
                          $ref: '#/components/schemas/Point'
                        ProjectData:
                          $ref: '#/components/schemas/Project'
      parameters:
        - schema:
            type: string
          in: query
          name: pointId
          description: GUID of pointId
        - schema:
            type: string
          in: query
          name: projectId
          description: GUID of projectId
        - schema:
            type: string
          in: query
          name: projectNo
      description: returns intakes matching query parameters
      tags:
        - Endpoints
  '/intake/{intakeId}':
    parameters:
      - schema:
          type: string
        name: intakeId
        in: path
        required: true
        description: GUID of intake
    get:
      summary: 'Intake GET {intakeId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intake'
      operationId: get-intake-intakeId
      description: GET data on Intake
      tags:
        - Endpoints
    patch:
      summary: 'Intake Patch {IntakeId}'
      operationId: patch-intake-intakeId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intake'
              examples: {}
      description: update intake data. Note that validation rule may limit what data can be modified
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  intakeNo: 0
                  intakeName: string
                  description: string
                  screenNo: string
                  top: 0
                  bottom: 0
                  depth1: 0
                  depth2: 0
              properties:
                intakeNo:
                  type: number
                intakeName:
                  type: string
                description:
                  type: string
                screenNo:
                  type: string
                top:
                  type: number
                bottom:
                  type: number
                depth1:
                  type: number
                depth2:
                  type: number
                diameter_mm:
                  type: string
              required:
                - intakeNo
        description: ''
      tags:
        - Endpoints
    delete:
      summary: 'Intake DELETE {IntakeId}'
      operationId: delete-intake-intakeId
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: Delete IntakeId
      tags:
        - Endpoints
  '/point/{pointId}':
    parameters:
      - schema:
          type: string
        name: pointId
        in: path
        required: true
    get:
      summary: 'Point GET {pointId}'
      tags:
        - Endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
      operationId: get-point-pointId-'
      description: Get point data
    patch:
      summary: 'Point PATCH {pointId}'
      operationId: patch-point-pointId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
      description: update point data
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  pointId: string
                  pointNo: string
                  description: string
                  startDate: '2019-08-24T14:15:22Z'
                  endDate: '2019-08-24T14:15:22Z'
                  projectId: string
                  pointTypeC: string
                  pointTypeT: string
                  phaseId: string
                  phaseT: string
                  Well:
                    DGU: string
                    purposeC: string
                    purposeT: string
                    useC: string
                    useT: string
                    WellTopTypeC: string
                    WellTopTypeT: string
                    isAbandoned: true
                    contractorId: string
                    contractorT: string
                    geoCompany: string
                    abandonDate: string
                    hasIntakes: true
                  x: 0
                  'y': 0
                  z: 0
                  dataowner: string
                  StatusC: string
                  StatusT: string
                  pointTypeGroup: string
                  pointTypeJupiterGroupC: string
              properties:
                pointNo:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
                projectId:
                  type: string
                pointTypeC:
                  type: string
                phaseId:
                  type: string
                Well:
                  type: object
                  properties:
                    DGU:
                      type: string
                    purposeC:
                      type: string
                    useC:
                      type: string
                    WellTopTypeC:
                      type: string
                    contractorId:
                      type: string
                    geoCompany:
                      type: string
                    abandonDate:
                      type: string
                x:
                  type: number
                'y':
                  type: number
                z:
                  type: number
                StatusC:
                  type: string
              required:
                - pointNo
                - projectId
            examples: {}
      tags:
        - Endpoints
    delete:
      summary: 'Point DELETE {pointId}'
      operationId: delete-point-pointId
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: delete point
      tags:
        - Endpoints
  /codeListOverview:
    get:
      summary: CodeListOverview GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    listId:
                      type: string
                    listDescription:
                      type: string
                    stancodeListNo:
                      type: string
      operationId: get-codeListOverview
      description: Overview of all codelists
      tags:
        - Endpoints
components:
  schemas:
    Project_Detailed:
      title: Project detailed
      description: A project (also called location) consists of one or many samplesites (boreholes ect)
      x-examples: {}
      x-tags:
        - objects
      type: object
      properties:
        projectId:
          type: string
        ProjectData:
          $ref: '#/components/schemas/Project'
        ProjectPhases:
          type: array
          items:
            $ref: '#/components/schemas/ProjectPhase'
        SampleSites:
          type: array
          items:
            $ref: '#/components/schemas/SampleSite'
    SampleSite:
      title: SampleSite
      description: Borehole or other samplesite. Where one or more samplings can be made.
      type: object
      x-examples: {}
      x-tags:
        - objects
      properties:
        sampleSiteId:
          type: string
          description: either a geogis pointid or intakeid
        sampleSiteLabel:
          type: string
          description: 'auto formattet label: DGU:pointno-intakeno'
        sampleSiteType:
          type: string
          description: point or intake
        point:
          $ref: '#/components/schemas/Point'
        intake:
          $ref: '#/components/schemas/Intake'
        project:
          $ref: '#/components/schemas/Project'
        LastWaterlevel:
          type: object
          description: Last waterlevel measurements
          properties:
            date:
              type: string
            waterlevel:
              type: string
            depth:
              type: string
              description: depth reading in meters
            referencelevel:
              type: string
            situationC:
              type: string
              description: 'codevalue for waterlevel situation. '
            situationT:
              type: string
              description: 'code-text for situation. example ''Ro'', ''Drift'''
            extremeC:
              type: string
              description: code for extreme
            extremeT:
              type: string
              description: 'code-text for extreme. Example: ''overløb'', ''normal'''
        LastSample:
          type: object
          properties:
            date:
              type: string
            sampledBy:
              type: string
            MatrixC:
              type: string
            MatrixT:
              type: string
              description: code-text for medium. example 'jord'
            sampleId:
              type: string
      required:
        - sampleSiteId
        - sampleSiteLabel
        - project
    Sample_alt:
      title: Sample_alt
      type: object
      description: Samples taken to be analysed
      x-examples: {}
      x-tags:
        - objects
      properties:
        Sample:
          type: object
          properties:
            sampleId:
              type: string
            sampleLabel:
              type: string
            matrixC:
              description: Stancode list 1183. Air/water/soil
              type: string
            matricT:
              type: string
              description: Stancode list 1183
            sampledBy:
              type: string
            sampleBarcode:
              type: string
            sampleSiteId:
              type: string
            sampleSiteName:
              type: string
              description: districptive name of samplesite.
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            laboratoryId:
              type: string
            laboratoryName:
              type: string
            equipmentC:
              type: string
              description: 'Stancode list 1006. "orsarør","kulrør","canister" ect.'
            equipmentT:
              type: string
              description: Stancode list 1006
            IntakeNo:
              type: number
            IntakeName:
              type: string
            sampleTop_m:
              type: number
              format: double
            sampleBottom_m:
              type: number
              format: double
              description: sampled end datetime
            FieldRemark:
              type: string
              description: Remark from the field
            remark:
              type: string
              description: generic remark of sample
            fieldMeasurements:
              type: array
              items:
                type: object
                properties:
                  parameterC:
                    type: string
                  parameterT:
                    type: string
                  value:
                    type: string
                  unitT:
                    type: string
                  unitC:
                    type: string
                  methodT:
                    type: string
                  methodC:
                    type: string
                  accredited:
                    type: integer
                  analysisID:
                    type: string
                    description: generated GUID for the record.
          required:
            - sampleId
            - sampleSiteId
      x-internal: true
    Sample:
      title: Sample
      type: object
      description: Samples taken to be analysed
      x-examples: {}
      x-tags:
        - objects
      properties:
        sampleId:
          type: string
        sampleLabel:
          type: string
        matrixC:
          description: Stancode list 1183. Air/water/soil
          type: string
        matricT:
          type: string
          description: Stancode list 1183
        sampledBy:
          type: string
        sampleBarcode:
          type: string
        sampleSiteId:
          type: string
        sampleSiteLabel:
          type: string
          description: 'generated destricptive name of samplesite (pointno + intake). For instance: B201-1 '
        start:
          type: string
          format: date-time
          description: datetime for when sampling was started.
        end:
          type: string
          format: date-time
          description: datetime for when sampling was finished
        laboratoryId:
          type: string
        laboratoryName:
          type: string
        equipmentC:
          type: string
          description: 'Stancode list 1006. "orsarør","kulrør","canister" ect.'
        equipmentT:
          type: string
          description: Stancode list 1006
        IntakeNo:
          type: number
        IntakeName:
          type: string
        sampleTop_m:
          type: number
          format: double
          description: depth to top of sample
        sampleBottom_m:
          type: number
          format: double
          description: depth to bottom of sample
        fieldRemark:
          type: string
          description: Remark from the field
        remark:
          type: string
          description: generic remark of sample
        Intake:
          $ref: '#/components/schemas/Intake'
        Point:
          $ref: '#/components/schemas/Point'
        FieldMeasurements:
          type: array
          items:
            $ref: '#/components/schemas/fieldmeasurement'
    Intake:
      title: Intake
      type: object
      description: Intake for wells
      x-tags:
        - objects
      properties:
        intakeId:
          type: string
        intakeNo:
          type: integer
        Name:
          type: string
        Description:
          type: string
        screenNo:
          description: 'only relevant '
          type: integer
        top:
          type: number
        bottom:
          type: number
        depth1:
          type: number
        depth2:
          type: number
        pointId:
          type: string
        diameter_mm:
          type: number
    Point:
      title: Point
      type: object
      description: point data
      properties:
        pointId:
          type: string
        pointNo:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        projectId:
          type: string
        pointTypeC:
          type: string
        pointTypeT:
          type: string
        phaseId:
          type: string
        phaseT:
          type: string
          description: text description of projectphase
        x:
          type: number
        'y':
          type: number
        z:
          type: number
        dataowner:
          type: string
        StatusC:
          type: string
        StatusT:
          type: string
        pointTypeGroup:
          type: string
        pointTypeJupiterGroupC:
          type: string
        coordinateQualityC:
          type: string
        coordinateQualityT:
          type: string
        Well:
          type: object
          properties:
            DGU:
              type: string
            purposeC:
              type: string
            purposeT:
              type: string
            useC:
              type: string
            useT:
              type: string
            WellTopTypeC:
              type: string
              description: ''
            WellTopTypeT:
              type: string
            isAbandoned:
              type: boolean
            contractorId:
              type: string
              description: GUID
            contractorT:
              type: string
            geoCompany:
              type: string
            abandonDate:
              type: string
            hasIntakes:
              type: boolean
      x-tags:
        - objects
    Project:
      description: ''
      type: object
      x-examples:
        example-1:
          value:
            projectId: string
            projectNo: string
            projectTitle: string
            x: string
            'y': string
            geometry: string
            lat: string
            long: string
            jarNo: string
            Address: string
            contactregion: string
            personReference: string
            primaryLaboratory: string
            noteForSampler: string
            caseNumber: string
      title: Project
      x-tags:
        - objects
      properties:
        projectId:
          type: string
        projectNo:
          type: string
        projectTitle:
          type: string
        x:
          type: string
        'y':
          type: string
        geometry:
          type: string
        lat:
          type: string
        long:
          type: string
        jarNo:
          type: string
        Address:
          type: string
        contactRegion:
          type: string
        InvoicePersonReference:
          type: string
        primaryLaboratoryId:
          type: string
        noteToSampler:
          type: string
          description: generic information to the sampler regarding the project/site
        caseNumber:
          type: string
        projectManager:
          type: string
    fieldmeasurement:
      title: fieldMeasurement
      type: object
      x-tags:
        - objects
      description: field measurement data
      x-examples:
        example-1:
          measurementId: ''
          parameterC: string
          parameterT: string
          value: 7
          unitC: string
          unitT: string
          methodC: string
          methodT: string
          remark: string
      properties:
        measurementId:
          type: string
          description: GUID of record
        parameterC:
          type: string
          description: stancode 1008
        parameterT:
          type: string
        value:
          type: number
        unitC:
          type: string
        unitT:
          type: string
        methodC:
          type: string
        methodT:
          type: string
        remark:
          type: string
      required:
        - parameterC
        - unitC
    fieldmeasurement_input:
      title: fieldMeasurement_input
      type: object
      x-tags:
        - objects
      description: field measurement data
      x-examples: {}
      properties:
        measurementId:
          type: string
          description: GUID of record
        parameterC:
          type: string
          description: stancode 1008
        value:
          type: number
        unitC:
          type: string
        methodC:
          type: string
        remark:
          type: string
      required:
        - parameterC
        - unitC
    analysisvalue:
      title: analysisvalue
      type: object
      x-internal: true
      description: analysisvalues
      properties:
        valueId:
          type: string
          description: GUID of value record
        parameterId:
          type: string
        parameterT:
          type: string
        attributeC:
          type: string
        attributeT:
          type: string
        value:
          type: number
        unitC:
          type: string
        unitT:
          type: string
        valueText:
          type: string
        laboratoryId:
          type: string
        laboratoryT:
          type: string
        methodC:
          type: string
        methodT:
          type: string
        detectionLimit:
          type: number
        uncertainty:
          type: number
        remark:
          type: string
        siteC:
          type: string
        siteT:
          type: string
        sampleId:
          type: string
          description: GUID of sample
      x-tags:
        - objects
    ProjectPhase:
      title: ProjectPhase
      type: object
      description: project phase data
      x-tags:
        - objects
      properties:
        phaseId:
          type: string
        name:
          type: string
        type:
          type: string
        start:
          type: string
        end:
          type: string
        label:
          type: string
        companyId:
          type: string
        companyT:
          type: string
        projectId:
          type: string
    fieldMeasurementOLD:
      title: fieldMeasurementOLD
      type: object
      properties:
        water:
          type: object
          properties:
            temperature:
              type: number
            conductivity_mSm:
              type: number
            pH:
              type: number
            redox_mV:
              type: number
            pumpYield_m3h:
              type: number
              description: pumping yield in m3h
            prePump_l:
              type: number
              description: prepumping in litres
            waterlevelCalm_m:
              type: number
            waterlevelInUse_m:
              type: number
            air-orsa:
              type: object
              properties:
                sampleMinutes:
                  type: integer
            air-coal:
              type: object
              properties:
                airVolume_l:
                  type: number
                counterPressure_mbar:
                  type: number
            soil:
              type: object
              properties:
                sampleTop_m:
                  type: number
                sampleBottom_m:
                  type: number
      x-internal: true
  securitySchemes: {}
  parameters:
    projectNo:
      name: projectNo
      in: query
      required: false
      schema:
        type: string
        example: 701-00101
        maxLength: 120
        minLength: 1
      description: the projectnumber of the location (GeoGIS projectNo)
    lat:
      name: lat
      in: query
      required: false
      schema:
        type: number
      description: 'latitude '
    long:
      name: long
      in: query
      required: false
      schema:
        type: string
      description: longitude
    distance:
      name: distance
      in: query
      required: false
      schema:
        type: integer
      description: distance in meters
  responses:
    unauthorised:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
tags:
  - name: geogis
  - name: Endpoints
