openapi: 3.0.0
info:
  title: geogis_openapi
  version: '1.0'
  description: API for GeoGIS field data
  contact:
    name: Danske Regioner
    url: 'http://www.danskeregioner.dk'
    email: tomhan@rm.dk
servers:
  - url: 'http://localhost:3000'
    description: testsite
  - description: Region Midt GeoGIS
    url: 'https://geogisopenapi-test.rm.dk/v1/api'
paths:
  /project:
    get:
      summary: Project GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
              examples: {}
        '400':
          description: Bad Request
      operationId: Project_FindProjects
      parameters:
        - $ref: '#/components/parameters/projectNo'
        - $ref: '#/components/parameters/distance'
        - schema:
            type: string
            deprecated: true
          in: query
          name: geometry
          description: WKT geometry of search area. Currently not implemented.
          deprecated: true
          style: pipeDelimited
        - schema:
            type: string
          in: query
          name: projectTypeC
          description: projecttype code
        - schema:
            type: string
          in: query
          name: caseNumber
          description: the project case number
        - schema:
            type: number
          in: query
          name: x
          description: x utm32euref89
        - schema:
            type: number
          in: query
          name: 'y'
          description: y utm32euref89
      description: Returns projects matching query parameters.
      tags:
        - Project
    parameters: []
  '/project/{projectId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: projectId
        in: path
        required: true
        description: GUID of project
    get:
      summary: 'Project GET {projectId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project_Detailed'
              examples:
                example-1:
                  value:
                    projectId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                    projectData:
                      projectId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                      projectNo: string
                      projectTitle: string
                      x: 545433
                      'y': 6555555
                      geometry: string
                      lat: string
                      long: string
                      jarNo: string
                      address: string
                      contactRegion: string
                      invoicePersonReference: string
                      primaryLaboratoryId: string
                      noteToSampler: string
                      caseNumber: string
                      projectManager: string
                    projectPhases:
                      - phaseId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                        name: string
                        type: string
                        start: '2019-08-24T14:15:22Z'
                        end: '2019-08-24T14:15:22Z'
                        label: string
                        companyId: string
                        companyT: string
                        projectId: AA881AC5-4776-4BA6-AF79-3B6DC302AF37
                    sampleSites:
                      - sampleSiteId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                        sampleSiteLabel: string
                        sampleSiteType: string
                        point:
                          pointId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                          pointNo: string
                          description: string
                          startDate: '2019-08-24T14:15:22Z'
                          endDate: '2019-08-24T14:15:22Z'
                          projectId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                          pointTypeC: string
                          pointTypeT: string
                          phaseId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                          phaseT: string
                          x: 0
                          'y': 0
                          z: 0
                          dataowner: string
                          StatusC: string
                          StatusT: string
                          pointTypeGroup: string
                          pointTypeJupiterGroupC: string
                          coordinateQualityC: string
                          coordinateQualityT: string
                          well:
                            dgu: string
                            purposeC: string
                            purposeT: string
                            useC: string
                            useT: string
                            wellTopTypeC: string
                            wellTopTypeT: string
                            isAbandoned: true
                            contractorId: string
                            contractorT: string
                            geoCompany: string
                            abandonDate: '2019-08-24T14:15:22Z'
                            hasIntakes: true
                        intake:
                          intakeId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                          intakeNo: 0
                          Name: string
                          Description: string
                          screenNo: 0
                          top: 0
                          bottom: 0
                          depth1: 0
                          depth2: 0
                          pointId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                          diameter_mm: 0
                        project:
                          projectId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                          projectNo: string
                          projectTitle: string
                          x: 0
                          'y': 0
                          geometry: string
                          lat: string
                          long: string
                          jarNo: string
                          address: string
                          contactRegion: string
                          invoicePersonReference: string
                          primaryLaboratoryId: string
                          noteToSampler: string
                          caseNumber: string
                          projectManager: string
                        lastWaterlevel:
                          date: '2019-08-24T14:15:22Z'
                          waterlevel: 0.4
                          depth: 2
                          referencelevel: 2
                          situationC: string
                          situationT: string
                          extremeC: string
                          extremeT: string
                        lastSample:
                          date: '2012-04-23T18:25:43.511Z'
                          sampledBy: string
                          MatrixC: string
                          MatrixT: string
                          sampleId: 4C681F7F-98CA-4F66-8375-87ED1D469366
        '404':
          description: Not Found
          content:
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                description: ''
                type: object
                properties:
                  location:
                    type: object
                    required:
                      - locationId
                    properties:
                      locationId:
                        type: string
                        minLength: 1
                      locationName:
                        type: string
                        minLength: 1
                      address:
                        type: string
                        minLength: 1
                      x: {}
                      'y': {}
                required:
                  - location
              examples: {}
      operationId: Project_GetProject
      description: Returns the information of a project by its projectId
      parameters: []
      tags:
        - Project
  /samplesite:
    get:
      summary: Samplesite GET
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  sampleSites:
                    type: array
                    items:
                      $ref: '#/components/schemas/SampleSite'
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: Samplesite_FindSamplesites
      description: 'get all samplesites that match query parameters. Parameters lat,long and distance are used to get records within distance from the position.'
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: projectId
          description: GUID of projectId
        - schema:
            type: string
          in: query
          name: dgu
          description: DGU number of borehole
        - schema:
            type: string
            format: date-time
          in: query
          name: startDate
          description: startdate must be less than
        - schema:
            type: string
            format: date-time
          in: query
          name: endDate
          description: enddate must be later than
        - schema:
            type: array
            items:
              type: string
          in: query
          name: pointTypeC
          description: the type of the samplesite. Pipedelimited
          style: pipeDelimited
        - $ref: '#/components/parameters/distance'
        - schema:
            type: boolean
          in: query
          name: isWell
          description: return only wells
        - schema:
            type: boolean
          in: query
          name: isNotWell
          description: do not return wells
        - schema:
            type: boolean
          in: query
          name: hasIntakes
          description: must have intakes
        - schema:
            type: string
          in: query
          name: projectNo
          description: projectno to search
        - schema:
            type: string
          in: query
          name: caseNumber
          description: projects case number
        - schema:
            type: string
            format: uuid
          in: query
          name: phaseId
          description: phaseId matching the samplesites
        - schema:
            type: boolean
          in: query
          name: isNotAbandoned
          description: only return data not marked as abandoned
        - schema:
            type: string
          in: query
          name: pointTypeJupiterGroupC
          description: '1=boringer, 2=jord,3=poreluft,4=indeklima,5=tilsyn,7=recipient,9=andet'
        - schema:
            type: number
          in: query
          name: x
          description: x coordinate
        - schema:
            type: number
          in: query
          name: 'y'
          description: y coordinate
      tags:
        - Samplesite
  '/samplesite/{samplesiteId}':
    get:
      summary: 'Samplesite GET {samplesiteId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleSite'
          headers: {}
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: Samplesite_GetSamplesite
      description: Get details of samplesite (geogis point and or intake)
      parameters: []
      tags:
        - Samplesite
    parameters:
      - schema:
          type: string
          format: uuid
        name: samplesiteId
        in: path
        description: GUID of samplesite (geogis pointId or intakeId)
        required: true
  /sample:
    get:
      summary: Sample GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  Samples:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sample'
          headers: {}
        '400':
          description: Bad Request
      operationId: Sample_FindSamples
      parameters:
        - schema:
            type: string
          in: query
          name: matrixC
          description: returns samples for the specified matrix
        - schema:
            type: string
          in: query
          name: laboratoryId
          description: returns samples for specified laboratory
        - schema:
            type: string
            format: date-time
          in: query
          name: StartDate
          description: returns samples sampled after date
        - schema:
            type: string
            format: date-time
          in: query
          name: endDate
          description: returns samples sampled before date
        - schema:
            type: string
            format: uuid
          in: query
          name: projectId
        - schema:
            type: string
            format: uuid
          in: query
          name: sampleSiteId
      description: get all samples matching parameters
      tags:
        - Sample
    put:
      summary: Sample PUT
      operationId: Sample_PutSample
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
              examples: {}
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                sampleId:
                  type: string
                  format: uuid
                sampleSiteId:
                  type: string
                  minLength: 1
                  description: Id of the sampleSite (pointId or intakeId)
                  format: uuid
                sampleLabel:
                  type: string
                matrixC:
                  type: string
                  description: 'codelist: "analysisMatrixC"'
                sampledBy:
                  type: string
                sampleBarcode:
                  type: string
                start:
                  type: string
                  format: date-time
                  nullable: true
                end:
                  type: string
                  format: date-time
                laboratoryId:
                  type: string
                  description: 'codelist: "analyisLaboratoryC"'
                  nullable: true
                equipmentC:
                  type: string
                  description: 'codelist: analysisEquipmentC'
                  nullable: true
                sampleTop_m:
                  type: number
                  description: depth from terrain to top of sample in meters
                sampleBottom_m:
                  type: number
                  description: depth i meters to bottom of sample (soilsamples)
                FieldRemark:
                  type: string
                  description: Remark from field worker
                remark:
                  type: string
                  description: generic remark field
                FieldMeasurements:
                  $ref: '#/components/schemas/fieldmeasurement_input'
              required:
                - sampleSiteId
                - matrixC
                - end
            examples: {}
        description: data for the new sample
      description: create new sample
      tags:
        - Sample
  '/sample/{sampleId}':
    get:
      summary: Sample GET sampleId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
        '400':
          description: Bad Request
      operationId: Sample_GetSample
      description: get data for specific sample.
      tags:
        - Sample
    parameters:
      - schema:
          type: string
          format: uuid
        name: sampleId
        in: path
        required: true
    patch:
      summary: 'Sample PATCH {sampleId}'
      operationId: Sample_PatchSample
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
              examples:
                example-1:
                  value:
                    sampleId: 5c4a81f0-8df5-49c5-ae5b-8065332edd7d
                    sampleLabel: string
                    matrixC: string
                    matrixT: string
                    sampledBy: Anders And
                    sampleBarcode: string
                    sampleSiteId: 06408910-b477-4287-bdf8-64758448bca5
                    sampleSiteLabel: string
                    start: '2019-08-24T14:15:22Z'
                    end: '2019-08-24T14:15:22Z'
                    laboratoryId: string
                    laboratoryName: string
                    equipmentC: string
                    equipmentT: string
                    IntakeNo: 0
                    IntakeName: string
                    sampleTop_m: 0
                    sampleBottom_m: 0
                    fieldRemark: string
                    remark: string
                    Intake:
                      intakeId: ff18c8c6-17bc-46ce-8080-39cea0958613
                      intakeNo: 1
                      Name: 1A
                      Description: string
                      screenNo: 1
                      top: 0
                      bottom: 0
                      depth1: 0
                      depth2: 0
                      pointId: 20a7be04-0667-469f-8fa4-da6cf02369c8
                      diameter_mm: 0
                    Point:
                      pointId: 20a7be04-0667-469f-8fa4-da6cf02369c8
                      pointNo: string
                      description: string
                      startDate: '2019-08-24T14:15:22Z'
                      endDate: '2019-08-24T14:15:22Z'
                      projectId: DA881AC5-4776-4BA6-AF79-3B6DC302AF37
                      pointTypeC: string
                      pointTypeT: string
                      phaseId: 0ad391c4-95b8-47f9-85a6-2edccf8f12cc
                      phaseT: string
                      x: 0
                      'y': 0
                      z: 0
                      dataowner: string
                      StatusC: string
                      StatusT: string
                      pointTypeGroup: string
                      pointTypeJupiterGroupC: string
                      coordinateQualityC: string
                      coordinateQualityT: string
                      well:
                        dgu: string
                        purposeC: string
                        purposeT: string
                        useC: string
                        useT: string
                        wellTopTypeC: string
                        wellTopTypeT: string
                        isAbandoned: true
                        contractorId: string
                        contractorT: string
                        geoCompany: string
                        abandonDate: '2019-08-24T14:15:22Z'
                        hasIntakes: true
                    FieldMeasurements:
                      - measurementId: ECC648E1-313E-4835-BF21-91BA57877786
                        parameterC: '215'
                        parameterT: benzen
                        value: 0.023
                        unitC: '20'
                        unitT: ug/l
                        methodC: '10'
                        methodT: DS 220
                        remark: string
                        attributeC: '7'
                        attributeT: '='
        '400':
          description: Bad Request
      description: update data for specified sample
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                Sample:
                  type: object
                  properties:
                    sampleId:
                      type: string
                      format: uuid
                    sampleSiteId:
                      type: string
                      format: uuid
                    sampleLabel:
                      type: string
                    matrixC:
                      type: string
                    sampledBy:
                      type: string
                    sampleBarcode:
                      type: string
                    start:
                      type: string
                      format: date-time
                      nullable: true
                    end:
                      type: string
                      format: date-time
                      description: sampling f
                    laboratoryId:
                      type: string
                      nullable: true
                    equipmentC:
                      type: string
                      nullable: true
                    sampleTop_m:
                      type: number
                    sampleBottom_m:
                      type: number
                    fieldRemark:
                      type: string
                    remark:
                      type: string
                    fieldMeasurements:
                      type: array
                      items:
                        $ref: '#/components/schemas/fieldmeasurement_input'
                    dataTimeStamp:
                      type: string
                      description: date-time for when data was extracted from database
                      format: date-time
                  required:
                    - sampleId
                    - sampleSiteId
            examples: {}
      tags:
        - Sample
    delete:
      summary: 'Sample DELETE {sampleId}'
      operationId: Sample_DeleteSample
      responses:
        '200':
          description: OK
      tags:
        - Sample
      description: 'Delete specified sample. Validation will restrict '
  /point:
    put:
      summary: Point PUT
      operationId: Point_PutPoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sampleSite:
                    $ref: '#/components/schemas/SampleSite'
                  point:
                    $ref: '#/components/schemas/Point'
        '201':
          description: Created
      description: Create new point (well or other). Response is samplesite object with the created point as a samplesite (Pointid becomes the samplesiteId). Response is also returned as point-object.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pointId:
                  type: string
                  description: GUID of new pointId. If empty a new GUID is returned in the response.
                  format: uuid
                projectId:
                  type: string
                  description: the projectId where the point is to be created on.
                  format: uuid
                pointNo:
                  type: string
                  example: IK2
                startDate:
                  type: string
                  format: date-time
                  nullable: true
                endDate:
                  type: string
                  format: date-time
                  description: for wells this is the drill-date
                  nullable: true
                phaseId:
                  type: string
                  format: uuid
                  nullable: true
                pointTypeC:
                  type: string
                descriptionLocation:
                  type: string
                  description: a description of the location of the point
                description:
                  type: string
                pointStatusC:
                  type: string
                  description: 'codelist: pointStatusC'
                  nullable: true
                x:
                  type: number
                  nullable: true
                'y':
                  type: number
                  nullable: true
                z:
                  type: number
                  nullable: true
                well:
                  type: object
                  description: Wellspecific data
                  properties:
                    dgu:
                      type: string
                      description: DGU number
                    purposeC:
                      type: string
                      nullable: true
                    useC:
                      type: string
                      nullable: true
                    wellTopTypeC:
                      type: string
                      nullable: true
                    contractorId:
                      type: string
                      description: 'codelist:contractorC'
                      format: uuid
                      nullable: true
                    geoCompany:
                      type: string
                    abandonDate:
                      type: string
                      format: date-time
                      nullable: true
              required:
                - projectId
                - pointNo
                - pointTypeC
            examples:
              example-1:
                value:
                  pointId: 20a7be04-0667-469f-8fa4-da6cf02369c8
                  projectId: 5a8591dd-4039-49df-9202-96385ba3eff8
                  pointNo: IK2
                  startDate: '2019-08-24T14:15:22Z'
                  endDate: '2019-08-24T14:15:22Z'
                  phaseId: 0ad391c4-95b8-47f9-85a6-2edccf8f12cc
                  pointTypeC: string
                  descriptionLocation: string
                  description: string
                  pointStatusC: string
                  x: 0
                  'y': 0
                  z: 0
                  well:
                    dgu: string
                    purposeC: string
                    useC: string
                    wellTopTypeC: string
                    contractorId: 8e641c22-41f4-4818-ae43-d2cb9b53e3d7
                    geoCompany: string
                    abandonDate: '2019-08-24T14:15:22Z'
        description: ''
      tags:
        - Sample
    get:
      summary: Point GET
      operationId: Point_FindPoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  Points:
                    type: array
                    items:
                      type: object
                      properties:
                        pointData:
                          $ref: '#/components/schemas/Point'
                        projectData:
                          $ref: '#/components/schemas/Project'
              examples: {}
            application/xml:
              schema:
                type: object
                properties: {}
      description: returns points matching query parameters. Minimum one criteria must be provided
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: projectId
        - schema:
            type: string
          in: query
          name: projectNo
        - schema:
            type: number
          in: query
          name: x
          description: coordinate x
        - schema:
            type: number
          in: query
          name: 'y'
          description: coordinate  y
        - schema:
            type: integer
          in: query
          name: distance
          description: 'distance from x,y to return data for'
        - schema:
            type: string
          in: query
          name: pointTypeJupiterGroupC
          description: '1=boringer, 2=jord,3=poreluft,4=indeklima,5=tilsyn,7=recipient,9=andet'
        - schema:
            type: boolean
          in: query
          name: isNotAbandoned
        - schema:
            type: boolean
          in: query
          name: isWell
        - schema:
            type: string
          in: query
          name: pointStatusC
        - schema:
            type: boolean
          in: query
          name: hasIntake
      tags:
        - Sample
  '/point/{pointId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: pointId
        in: path
        required: true
    get:
      summary: 'Point GET {pointId}'
      tags:
        - Point
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
      operationId: Point_GetPoint
      description: Get point data
    patch:
      summary: 'Point PATCH {pointId}'
      operationId: Point_PatchPoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
      description: update point data
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  pointId: string
                  pointNo: string
                  description: string
                  startDate: '2019-08-24T14:15:22Z'
                  endDate: '2019-08-24T14:15:22Z'
                  projectId: string
                  pointTypeC: string
                  pointTypeT: string
                  phaseId: string
                  phaseT: string
                  well:
                    dgu: string
                    purposeC: string
                    purposeT: string
                    useC: string
                    useT: string
                    wellTopTypeC: string
                    wellTopTypeT: string
                    isAbandoned: true
                    contractorId: string
                    contractorT: string
                    geoCompany: string
                    abandonDate: string
                    hasIntakes: true
                  x: 0
                  'y': 0
                  z: 0
                  dataowner: string
                  StatusC: string
                  StatusT: string
                  pointTypeGroup: string
                  pointTypeJupiterGroupC: string
              properties:
                pointNo:
                  type: string
                description:
                  type: string
                descriptionLocation:
                  type: string
                startDate:
                  type: string
                  format: date-time
                  nullable: true
                endDate:
                  type: string
                  format: date-time
                  nullable: true
                projectId:
                  type: string
                  format: uuid
                pointTypeC:
                  type: string
                phaseId:
                  type: string
                  format: uuid
                  nullable: true
                PointStatusC:
                  type: string
                  nullable: true
                x:
                  type: number
                  nullable: true
                'y':
                  type: number
                  nullable: true
                z:
                  type: number
                  nullable: true
                well:
                  type: object
                  properties:
                    dgu:
                      type: string
                    purposeC:
                      type: string
                      nullable: true
                    useC:
                      type: string
                      nullable: true
                    wellTopTypeC:
                      type: string
                      nullable: true
                    contractorId:
                      type: string
                      nullable: true
                    geoCompany:
                      type: string
                    abandonDate:
                      type: string
                      format: date-time
                      nullable: true
                dataTimeStamp:
                  type: string
                  format: date-time
                  description: date-time of original data from database
              required:
                - pointNo
                - projectId
                - pointTypeC
            examples: {}
      tags:
        - Point
    delete:
      summary: 'Point DELETE {pointId}'
      operationId: Point_DeletePoint
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: delete point
      tags:
        - Point
  /intake:
    put:
      summary: Intake PUT
      operationId: Intake_PutIntake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  intake:
                    $ref: '#/components/schemas/Intake'
              examples: {}
      description: create new intake on a well (pointId). Returns data as samplesite-object (intakeId becomes samplesiteId) and also as intake-object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pointId:
                  type: string
                  format: uuid
                intakeId:
                  type: string
                  format: uuid
                intakeNo:
                  type: integer
                intakeName:
                  type: string
                diameter_mm:
                  type: integer
                  nullable: true
                description:
                  type: string
                screenNo:
                  type: integer
                  nullable: true
              required:
                - pointId
                - intakeNo
        description: ''
      tags:
        - Intake
    parameters: []
    get:
      summary: Intake GET
      operationId: Intake_FindIntakes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recordsFound:
                    type: integer
                  maxRecordsExceeded:
                    type: boolean
                  intakes:
                    type: array
                    items:
                      type: object
                      properties:
                        intakeData:
                          $ref: '#/components/schemas/Intake'
                        pointData:
                          $ref: '#/components/schemas/Point'
                        projectData:
                          $ref: '#/components/schemas/Project'
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: pointId
          description: GUID of pointId
        - schema:
            type: string
            format: uuid
          in: query
          name: projectId
          description: GUID of projectId
        - schema:
            type: string
          in: query
          name: projectNo
      description: returns intakes matching query parameters
      tags:
        - Intake
  '/intake/{intakeId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: intakeId
        in: path
        required: true
        description: GUID of intake
    get:
      summary: 'Intake GET {intakeId}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intake'
      operationId: Intake_GetIntake
      description: GET data on Intake
      tags:
        - Intake
    patch:
      summary: 'Intake Patch {IntakeId}'
      operationId: Intake_PatchIntake
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intake'
              examples: {}
      description: update intake data. Note that validation rule may limit what data can be modified
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  intakeNo: 0
                  intakeName: string
                  description: string
                  screenNo: 0
                  top: 0
                  bottom: 0
                  depth1: 0
                  depth2: 0
              properties:
                intakeNo:
                  type: number
                intakeName:
                  type: string
                description:
                  type: string
                screenNo:
                  type: integer
                top:
                  type: number
                bottom:
                  type: number
                depth1:
                  type: number
                depth2:
                  type: number
                diameter_mm:
                  type: integer
                dataTimeStamp:
                  type: string
                  format: date-time
                  description: timestamp of original data
              required:
                - intakeNo
        description: ''
      tags:
        - Intake
    delete:
      summary: 'Intake DELETE {IntakeId}'
      operationId: Intake_DeleteIntake
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
      description: Delete IntakeId
      tags:
        - Intake
  /codeListOverview:
    get:
      summary: CodeListOverview GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  codelistoverview:
                    type: array
                    items:
                      type: object
                      properties:
                        listId:
                          type: string
                        listDescription:
                          type: string
                        stancodeListNo:
                          type: string
      operationId: CodeList_GetCodeListOverview
      description: Overview of all codelists
      tags:
        - CodeList
  '/codeList/{listId}':
    get:
      summary: CodeList GET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  listinfo:
                    type: object
                    properties:
                      listDescription:
                        type: string
                      listId:
                        type: string
                      stancodeListNo:
                        type: string
                      listValues:
                        type: array
                        items:
                          type: object
                          properties:
                            valueId:
                              type: string
                            value:
                              type: string
                            valueLong:
                              type: string
                            active:
                              type: boolean
                            startDate:
                              type: string
                              format: date-time
                              example: '2018-03-20T09:12:28Z'
                              nullable: true
                            endDate:
                              type: string
                              format: date-time
                              nullable: true
                            stancodeNo:
                              type: string
                            remark:
                              type: string
                            sortOrder:
                              type: integer
                            type:
                              type: string
                            prefix:
                              type: string
                            jupiterId:
                              type: string
              examples:
                example-1:
                  value:
                    listinfo:
                      listName: sampleEquipment
                      listID: '1'
                      stancodeListNo: '1'
                      listValues:
                        - valueId: '1'
                          value: kulrør
                          valueLong: kulrør til luftprøver
                          active: true
                          startDate: '2012-04-23T18:25:43.511Z'
                          endDate: '2019-08-24T14:15:22Z'
                          stancodeNo: '123'
                          remark: ''
                        - valueId: '2'
                          value: orsarør
                          valueLong: orsarør til luftprøver
                          active: true
                          startDate: '2019-08-24T14:15:22Z'
                          endDate: '2019-08-24T14:15:22Z'
                          stancodeNo: '125'
                          remark: ''
                example-2:
                  value:
                    listinfo:
                      listDescription: string
                      listID: string
                      stancodeListNo: string
                      listValues:
                        - valueId: string
                          value: string
                          valueLong: string
                          active: true
                          startDate: '2018-03-20T09:12:28Z'
                          endDate: '2019-08-24T14:15:22Z'
                          stancodeNo: string
                          remark: string
                          sortOrder: 0
                          type: string
                          prefix: string
                          jupiterId: string
      operationId: CodeList_GetCodeList
      description: get codevalues used in endpoints. Only for simple list-tables
      parameters:
        - schema:
            type: boolean
            default: true
          in: query
          name: ShowNonActive
          description: show non-active items?
        - schema:
            type: string
            default: DK
          in: query
          name: Setup
          description: show rows with specified setup (language). Default is DK
      tags:
        - CodeList
    parameters:
      - schema:
          type: string
        name: listId
        in: path
        required: true
        description: the ID of the list to return. "null" returns all lists
components:
  schemas:
    Project_Detailed:
      title: Project detailed
      description: A project (also called location) consists of one or many samplesites (boreholes ect)
      x-examples: {}
      x-tags:
        - objects
      type: object
      properties:
        projectId:
          type: string
          format: uuid
        projectData:
          $ref: '#/components/schemas/Project'
        projectPhases:
          type: array
          items:
            $ref: '#/components/schemas/ProjectPhase'
        sampleSites:
          type: array
          items:
            $ref: '#/components/schemas/SampleSite'
        Points:
          type: array
          items:
            $ref: '#/components/schemas/point_intakes'
    SampleSite:
      title: SampleSite
      description: Borehole or other samplesite. Where one or more samplings can be made.
      type: object
      x-examples: {}
      x-tags:
        - objects
      properties:
        sampleSiteId:
          type: string
          format: uuid
          description: either a geogis pointId or intakeId
        sampleSiteLabel:
          type: string
          description: 'auto formattet label: DGU:pointno-intakeno'
        sampleSiteType:
          type: string
          description: point or intake
        point:
          $ref: '#/components/schemas/Point'
        intake:
          $ref: '#/components/schemas/Intake'
        project:
          $ref: '#/components/schemas/Project'
        gisLegend:
          type: string
        lastWaterlevel:
          type: object
          description: Last waterlevel measurements
          properties:
            date:
              type: string
              format: date-time
            waterlevel:
              type: number
              nullable: true
            depth:
              type: number
              description: depth reading in meters
              nullable: true
            referencelevel:
              type: number
              nullable: true
            situationC:
              type: string
              description: codevalue for waterlevel situation. (codelist='waterlevelSituationC')
              nullable: true
            situationT:
              type: string
              description: 'code-text for situation. example ''Ro'', ''Drift'''
              nullable: true
            extremeC:
              type: string
              description: code for extreme. (codelist='waterlevelExtremeC')
              nullable: true
            extremeT:
              type: string
              description: 'code-text for extreme. Example: ''overløb'', ''normal'''
              nullable: true
        lastSample:
          type: object
          properties:
            date:
              type: string
              format: date-time
            sampledBy:
              type: string
            MatrixC:
              type: string
              description: (codelist='analysisMatrixC')
              nullable: true
            MatrixT:
              type: string
              description: code-text for medium. example 'jord'
              nullable: true
            sampleId:
              type: string
              format: uuid
      required:
        - sampleSiteId
        - sampleSiteLabel
        - project
    Sample:
      title: Sample
      type: object
      description: Samples taken to be analysed
      x-examples: {}
      x-tags:
        - objects
      properties:
        sampleId:
          type: string
          format: uuid
        sampleLabel:
          type: string
        matrixC:
          description: (codelist='analysisMatrixC') Stancode list 1183. Air/water/soil
          type: string
        matrixT:
          type: string
          description: Stancode list 1183
        sampledBy:
          type: string
          example: Anders And
        sampleBarcode:
          type: string
        sampleSiteId:
          type: string
          format: uuid
        sampleSiteLabel:
          type: string
          description: 'generated destricptive name of samplesite (pointno + intake). For instance: B201-1 '
        start:
          type: string
          format: date-time
          description: datetime for when sampling was started.
          nullable: true
        end:
          type: string
          format: date-time
          description: 'datetime for when sampling was finished. '
        laboratoryId:
          type: string
          description: stancode 1025 codelist=AnalysisLaboratoryC
          nullable: true
        laboratoryName:
          type: string
          nullable: true
        equipmentC:
          type: string
          description: 'codetype=''analysisEquipmentC'' for '
          nullable: true
        equipmentT:
          type: string
          description: 'Stancode list 1006  '
          nullable: true
        IntakeNo:
          type: number
        IntakeName:
          type: string
        sampleTop_m:
          type: number
          format: double
          description: depth to top of sample
        sampleBottom_m:
          type: number
          format: double
          description: depth to bottom of sample
        fieldRemark:
          type: string
          description: Remark from the field
        remark:
          type: string
          description: generic remark of sample
        allowRequision:
          type: boolean
          description: calculated field representing if new requisitions can be made on the sample
        Intake:
          $ref: '#/components/schemas/Intake'
        Point:
          $ref: '#/components/schemas/Point'
        FieldMeasurements:
          type: array
          items:
            $ref: '#/components/schemas/fieldmeasurement'
      required:
        - sampleId
        - matrixC
        - end
    Intake:
      title: Intake
      type: object
      description: Intake for wells
      x-tags:
        - objects
      properties:
        intakeId:
          type: string
          format: uuid
        intakeNo:
          type: integer
          example: 1
        Name:
          type: string
          example: 1A
        Description:
          type: string
        screenNo:
          type: integer
          description: only relevant in special cases
          example: 1
          nullable: true
        top:
          type: number
          description: top of intakepipe in meters above terrain
          nullable: true
        bottom:
          type: number
          description: 'debth in meters from terrain to bottom of intakepipe '
          nullable: true
        depth1:
          type: number
          description: depth to top of filterintake from terrain
          nullable: true
        depth2:
          type: number
          description: depth to top of filterintake from terrain
          nullable: true
        pointId:
          type: string
          format: uuid
        diameter_mm:
          type: number
          description: diameter of pipe
          nullable: true
    Point:
      title: Point
      type: object
      description: point data
      x-tags:
        - objects
      properties:
        pointId:
          type: string
          format: uuid
        pointNo:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        projectId:
          type: string
          format: uuid
        pointTypeC:
          type: string
          description: codelist='pointTypeC'
          nullable: true
        pointTypeT:
          type: string
          nullable: true
        phaseId:
          type: string
          format: uuid
          nullable: true
        phaseT:
          type: string
          description: text description of projectphase
          nullable: true
        x:
          type: number
          nullable: true
        'y':
          type: number
          nullable: true
        z:
          type: number
          nullable: true
        dataowner:
          type: string
        StatusC:
          type: string
          description: codelist='pointStatusC'
          nullable: true
        StatusT:
          type: string
          nullable: true
        pointTypeGroup:
          type: string
          description: 'Boring, Jordforurening, poreluft, indeklima, recipient ect (codelist=''pointTypeGroupC'')'
        pointTypeJupiterGroupC:
          type: string
          description: '1=boringer, 2=other ... Codelist=''PointTypeJupiterGroupC'''
        coordinateQualityC:
          type: string
          description: codelist=CoordinateQualityC
          nullable: true
        coordinateQualityT:
          type: string
          nullable: true
        gisLegendC:
          type: string
        gisLegendT:
          type: string
        markedForSampling:
          type: boolean
          description: is the point marked to be sampled?
        well:
          type: object
          properties:
            dgu:
              type: string
            purposeC:
              type: string
              description: codelist='pointPurposeC'
              nullable: true
            purposeT:
              type: string
              nullable: true
            useC:
              type: string
              description: codelist='PointUseC'
              nullable: true
            useT:
              type: string
              nullable: true
            wellTopTypeC:
              type: string
              description: codelist='WellTopTypeC'
              nullable: true
            wellTopTypeT:
              type: string
              nullable: true
            isAbandoned:
              type: boolean
            contractorId:
              type: string
              description: GUID codelist='contractorC'
              maxLength: 36
              nullable: true
            contractorT:
              type: string
              nullable: true
            geoCompany:
              type: string
              description: 'geology-company '
            abandonDate:
              type: string
              format: date-time
              nullable: true
            hasIntakes:
              type: boolean
    point_intakes:
      title: Points including intakes
      type: object
      description: point data including intakes
      x-tags:
        - objects
      properties:
        pointId:
          type: string
          format: uuid
        pointNo:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        projectId:
          type: string
          format: uuid
        pointTypeC:
          type: string
          description: codelist='pointTypeC'
        pointTypeT:
          type: string
        phaseId:
          type: string
          format: uuid
          nullable: true
        phaseT:
          type: string
          description: text description of projectphase
        x:
          type: number
          nullable: true
        'y':
          type: number
          nullable: true
        z:
          type: number
          nullable: true
        dataowner:
          type: string
        StatusC:
          type: string
          description: codelist='pointStatusC'
          nullable: true
        StatusT:
          type: string
          nullable: true
        pointTypeGroup:
          type: string
          description: 'Boring, Jordforurening, poreluft, indeklima, recipient ect (codelist=''pointTypeGroupC'')'
        pointTypeJupiterGroupC:
          type: string
          description: '1=boringer, 2=other ... Codelist=''PointTypeJupiterGroupC'''
        coordinateQualityC:
          type: string
          description: codelist=CoordinateQualityC
          nullable: true
        coordinateQualityT:
          type: string
          nullable: true
        gisLegendC:
          type: string
        gisLegendT:
          type: string
        well:
          type: object
          properties:
            dgu:
              type: string
            purposeC:
              type: string
              description: codelist='pointPurposeC'
              nullable: true
            purposeT:
              type: string
              nullable: true
            useC:
              type: string
              description: codelist='PointUseC'
              nullable: true
            useT:
              type: string
              nullable: true
            wellTopTypeC:
              type: string
              description: codelist='WellTopTypeC'
              nullable: true
            wellTopTypeT:
              type: string
              nullable: true
            isAbandoned:
              type: boolean
            contractorId:
              type: string
              description: GUID codelist='contractorC'
              maxLength: 36
              nullable: true
            contractorT:
              type: string
              nullable: true
            geoCompany:
              type: string
              description: 'geology-company '
            abandonDate:
              type: string
              nullable: true
            hasIntakes:
              type: boolean
        intakes:
          type: array
          items:
            $ref: '#/components/schemas/Intake'
    Project:
      description: ''
      type: object
      x-examples: {}
      title: Project
      x-tags:
        - objects
      properties:
        projectId:
          type: string
          format: uuid
        projectNo:
          type: string
          example: 741-00001
        projectTitle:
          type: string
          example: Vestergade 1 renseri
        x:
          type: number
          nullable: true
        'y':
          type: number
          nullable: true
        geometry:
          type: string
        jarNo:
          type: string
        address:
          type: string
          example: 'Vestergade 1, 9000'
        contactRegion:
          type: string
        invoicePersonReference:
          type: string
        primaryLaboratoryId:
          type: string
          description: 'codelist:analysisLaboratoryC'
          nullable: true
        noteToSampler:
          type: string
          description: generic information to the sampler regarding the project/site
        caseNumber:
          type: string
        projectManager:
          type: string
    fieldmeasurement:
      title: fieldMeasurement
      type: object
      x-tags:
        - objects
      description: field measurement data
      x-examples:
        example-2:
          measurementId: ECC648E1-313E-4835-BF21-91BA57877786
          parameterC: '215'
          parameterT: benzen
          value: 0.023
          unitC: '20'
          unitT: ug/l
          attributeC: null
          attributeT: null
          methodC: '10'
          methodT: DS 220
          remark: string
      properties:
        measurementId:
          type: string
          description: GUID of record
          format: uuid
          example: ECC648E1-313E-4835-BF21-91BA57877786
        parameterC:
          type: string
          description: codelist='analysisparameterC' stancode 1008
          example: '215'
        parameterT:
          type: string
          example: benzen
        value:
          type: number
          example: 0.023
          format: double
        unitC:
          type: string
          description: codelist 'analysisUnitC'
          example: '20'
        unitT:
          type: string
          example: ug/l
        attributeC:
          type: string
          description: codelist 'AttributeC'
          example: '7'
          nullable: true
        attributeT:
          type: string
          example: '='
          nullable: true
        methodC:
          type: string
          description: codelist 'AnalysisUnitC'
          example: '10'
          nullable: true
        methodT:
          type: string
          example: DS 220
          nullable: true
        remark:
          type: string
      required:
        - parameterC
        - unitC
    fieldmeasurement_input:
      title: fieldMeasurement_input
      type: object
      x-tags:
        - objects
      description: field measurement data
      x-examples: {}
      properties:
        measurementId:
          type: string
          format: uuid
          description: GUID of record
        parameterC:
          type: string
          description: stancode 1008
        attributeC:
          type: string
          nullable: true
        value:
          type: number
          example: 0.23
          format: double
        unitC:
          type: string
          example: '20'
        methodC:
          type: string
          nullable: true
        remark:
          type: string
      required:
        - parameterC
        - unitC
    ProjectPhase:
      title: ProjectPhase
      type: object
      description: project phase data
      x-tags:
        - objects
      properties:
        phaseId:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
        label:
          type: string
        companyId:
          type: string
          nullable: true
        companyT:
          type: string
          nullable: true
        projectId:
          type: string
          format: uuid
  securitySchemes: {}
  parameters:
    projectNo:
      name: projectNo
      in: query
      required: false
      schema:
        type: string
        example: 701-00101
        maxLength: 120
        minLength: 1
      description: the projectnumber of the location (GeoGIS projectNo)
    lat:
      name: lat
      in: query
      required: false
      schema:
        type: number
      description: 'latitude '
    long:
      name: long
      in: query
      required: false
      schema:
        type: string
      description: longitude
    distance:
      name: distance
      in: query
      required: false
      schema:
        type: integer
      description: 'distance in meters from x,y'
  responses:
    unauthorised:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
tags:
  - name: CodeList
  - name: Intake
  - name: Point
  - name: Project
  - name: Sample
  - name: Samplesite
