openapi: 3.0.0
info:
  title: geogis_openapi
  version: '1.0'
  description: geogisapi
servers:
  - url: 'http://localhost:3000'
paths:
  '/projects/{projectid}':
    parameters:
      - schema:
          type: string
        name: projectid
        in: path
        required: true
    get:
      summary: Get project by projectId
      tags: []
      responses:
        '302':
          description: Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Not Found
          content:
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                description: ''
                type: object
                properties:
                  location:
                    type: object
                    required:
                      - locationId
                    properties:
                      locationId:
                        type: string
                        minLength: 1
                      locationName:
                        type: string
                        minLength: 1
                      address:
                        type: string
                        minLength: 1
                      x: {}
                      'y': {}
                required:
                  - location
              examples: {}
      operationId: get-location
      description: Retrieve the information of a location
      parameters: []
  /user:
    post:
      summary: Create New User - example
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
  '/samplesite/{samplesiteid}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  samplesite:
                    type: object
                    properties:
                      samplesiteid:
                        type: string
                      samplesiteNo:
                        type: string
                      publicno:
                        type: string
                      intakeid:
                        type: string
                    required:
                      - samplesiteid
                  location:
                    $ref: '#/components/schemas/feltdata2'
          headers: {}
      operationId: get-samplesite
      description: Get details of samplesite (geogis point and or intake)
      parameters:
        - schema:
            type: string
          in: query
          name: test
    parameters:
      - schema:
          type: string
        name: samplesiteid
        in: path
        description: GUID of samplesite (geogis pointid or intakeid)
    patch:
      summary: ''
      operationId: patch-samplesite-samplesiteid
      responses:
        '200':
          description: OK
      parameters: []
  /samplesite:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/feltdata2'
      operationId: get-samplesite
      description: list samplesites that match parameters
      parameters:
        - schema:
            type: string
          in: query
          name: projectid
          description: GUID of projectid
        - schema:
            type: array
          in: query
          name: DGU
          description: DGU numer of samplesite
        - schema:
            type: string
          in: query
          name: startDate
        - schema:
            type: string
          in: query
          name: endDate
        - schema:
            type: array
          in: query
          name: typeCode
  /projects:
    get:
      summary: GET all projects that match parameters
      tags: []
      responses:
        '302':
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
      operationId: get-projects-find
      parameters:
        - $ref: '#/components/parameters/projectNo'
    parameters: []
components:
  schemas:
    Project:
      title: Project
      type: object
      description: a project (also called location) consists of one or many samplesites (boreholes ect)
      properties:
        project:
          type: object
          properties:
            projectId:
              type: string
              description: GUID
            projectNo:
              type: string
            projectTitle:
              type: string
            x:
              description: x coordinate
              type: integer
            'y':
              type: integer
              description: y coordinate in UTM32euref89
      x-examples:
        example-1:
          project:
            projectId: ac1a56a1-5f39-4272-b8f3-8fd8fd033b41
            projectNo: 730-00090
            projectTitle: Vestergade 39 olieforurening
            x: 5454540
            'y': 62293921
    Samplesite:
      title: Samplesite
      description: ''
      type: object
      properties:
        samplesiteid:
          type: string
        samplesiteno:
          type: string
        DGU:
          type: string
        intakeno:
          type: number
        intakeid:
          type: string
  securitySchemes: {}
  parameters:
    projectNo:
      name: projectNo
      in: query
      required: false
      schema:
        type: string
        example: 701-00101
        maxLength: 120
        minLength: 1
      description: the projectnumber of the location (GeoGIS projectNo)
    xCoordinate:
      name: xCoordinate
      in: query
      required: false
      schema:
        type: number
      description: x part of coordinate i UTM 32 euref 89
    yCoordinate:
      name: yCoordinate
      in: query
      required: false
      schema:
        type: number
      description: y part of coordinate
    lat:
      name: lat
      in: query
      required: false
      schema:
        type: number
      description: 'latitude '
    long:
      name: long
      in: query
      required: false
      schema:
        type: string
      description: longitude
  responses:
    test:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
